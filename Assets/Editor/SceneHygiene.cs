// Auto-generated by Assistant v4
#if UNITY_EDITOR
using UnityEditor;
using UnityEditor.SceneManagement;
using UnityEngine;
using UnityEngine.EventSystems;
using System.Linq;

[InitializeOnLoad]
public static class SceneHygiene
{
    static SceneHygiene()
    {
        EditorApplication.playModeStateChanged += OnPlayModeChanged;
    }

    [MenuItem("Tools/Project/Enforce Scene Hygiene")]
    public static void EnforceNow()
    {
        EnforceHygiene();
    }

    private static void OnPlayModeChanged(PlayModeStateChange change)
    {
        if (change == PlayModeStateChange.ExitingEditMode || change == PlayModeStateChange.EnteredPlayMode)
        {
            EnforceHygiene();
        }
    }

    private static void EnforceHygiene()
    {
        // Ensure exactly one AudioListener (prefer Main Camera)
        var listeners = Object.FindObjectsOfType<AudioListener>(true);
        Camera mainCam = Camera.main;
        if (listeners.Length == 0)
        {
            if (mainCam != null)
            {
                mainCam.gameObject.AddComponent<AudioListener>();
                Debug.Log("[Hygiene] Added AudioListener to Main Camera.");
            }
            else
            {
                var go = new GameObject("Main Camera");
                go.tag = "MainCamera";
                go.AddComponent<Camera>();
                go.AddComponent<AudioListener>();
                Debug.Log("[Hygiene] Created Main Camera with AudioListener.");
            }
        }
        else if (listeners.Length > 1)
        {
            // Keep on main camera if present; otherwise keep first enabled and disable others
            AudioListener keep = null;
            if (mainCam != null) keep = mainCam.GetComponent<AudioListener>();
            if (keep == null) keep = listeners.FirstOrDefault(l => l.enabled);
            if (keep == null) keep = listeners[0];
            foreach (var l in listeners)
            {
                if (l != keep && l.enabled)
                {
                    l.enabled = false;
                    Debug.LogWarning($"[Hygiene] Disabled extra AudioListener on {l.gameObject.name}.");
                }
            }
        }

        // Ensure exactly one EventSystem
        var es = Object.FindObjectsOfType<EventSystem>(true);
        if (es.Length == 0)
        {
            var esGO = new GameObject("EventSystem");
            esGO.AddComponent<EventSystem>();
            esGO.AddComponent<StandaloneInputModule>();
            Debug.Log("[Hygiene] Added EventSystem.");
        }
        else if (es.Length > 1)
        {
            for (int i = 1; i < es.Length; i++)
            {
                Object.DestroyImmediate(es[i].gameObject);
                Debug.LogWarning("[Hygiene] Removed extra EventSystem.");
            }
        }

        // Ensure a 'Systems' container exists
        var systems = GameObject.Find("/Systems") ?? GameObject.Find("Systems");
        if (systems == null)
        {
            systems = new GameObject("Systems");
            Debug.Log("[Hygiene] Created Systems root.");
        }

        // Save if in edit mode changes occurred
        if (!Application.isPlaying)
        {
            EditorSceneManager.MarkSceneDirty(EditorSceneManager.GetActiveScene());
        }
    }
}
#endif
