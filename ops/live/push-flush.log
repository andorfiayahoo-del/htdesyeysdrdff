[2025-08-22T10:42:46.7535930Z] GIT_HEALTH_OK remote=origin branch=main
[2025-08-22T10:42:48.0504224Z] GIT_SYNC_COMMIT_OK
[2025-08-22T10:42:51.2992413Z] GIT_SYNC_PUSH_OK
[2025-08-22T11:28:27.2717741Z] GIT_HEALTH_OK remote=origin branch=main
[2025-08-22T12:23:30.6092420Z] GIT_HEALTH_OK remote=origin branch=main
[2025-08-22T12:26:44.7453276Z] GIT_HEALTH_OK remote=origin branch=main
[2025-08-22T12:37:37.1882876Z] GIT_HEALTH_OK remote=origin branch=main
[2025-08-22T12:37:38.5207017Z] GIT_HEALTH_OK remote=origin branch=main
[2025-08-22T12:41:24.3060152Z] GIT_HEALTH_FAIL reason=Remote unreachable
[2025-08-22T12:41:27.8100399Z] GIT_HEALTH_OK remote=origin branch=main
[2025-08-22T12:41:28.8000076Z] GIT_HEALTH_OK remote=origin branch=main
[2025-08-22T12:56:20.2584748Z] GIT_HEALTH_OK remote=origin branch=main
[2025-08-22T17:42:03.4370507Z] GIT_SYNC_COMMIT_OK
[2025-08-22T17:42:05.0016915Z] GIT_SYNC_PUSH_OK
[2025-08-22T17:42:05.4221537Z] GIT_VERIFY_FAIL ec=1 (see VERIFY_* lines above)
[2025-08-22T18:47:23.9227868Z] VERIFY_EX type=System.Management.Automation.MethodInvocationException msg=Exception calling "Join" with "2" argument(s): "Value cannot be null. (Parameter 'values')"
[2025-08-22T19:04:17.7556326Z] VERIFY_BEGIN local= remote= branch=main repo=andorfiayahoo-del/htdesyeysdrdff
[2025-08-22T19:04:17.7689552Z] VERIFY_FAIL_REF local= remote=
[2025-08-22T19:11:12.0860272Z] VERIFY_BEGIN local= remote= branch=main repo=andorfiayahoo-del/htdesyeysdrdff
[2025-08-22T19:11:12.0931757Z] VERIFY_FAIL_REF local= remote=
[2025-08-22T19:25:31.1224629Z] VERIFY_ENV git=C:\Program Files\Git\cmd\git.exe
[2025-08-22T19:25:31.1477190Z] VERIFY_GIT_OK tag=rev-parse-is-inside
[2025-08-22T19:25:31.2003170Z] VERIFY_ENV_NOT_WORKTREE out=
[2025-08-22T19:38:28.3980254Z] VERIFY_ENV git=C:\Program Files\Git\cmd\git.exe
[2025-08-22T19:38:28.4313432Z] VERIFY_GIT_OK tag=rev-parse-is-inside out=
[2025-08-22T19:38:28.4493431Z] VERIFY_GIT_OK tag=rev-parse-git-dir out=
[2025-08-22T19:38:28.4607983Z] VERIFY_GIT_OK tag=rev-parse-show-toplevel out=
[2025-08-22T19:38:28.4713890Z] VERIFY_PROBE dotgit=C:\Users\ander\My project\.git exists=True
[2025-08-22T19:38:28.4824825Z] VERIFY_ENV_WORKTREE_OK
[2025-08-22T19:38:28.4934728Z] VERIFY_GIT_OK tag=rev-parse-HEAD out=
[2025-08-22T19:38:28.5014176Z] VERIFY_GIT_OK tag=ls-remote out=
[2025-08-22T19:38:28.5115900Z] VERIFY_BEGIN local= remote= branch=main repo=andorfiayahoo-del/htdesyeysdrdff
[2025-08-22T19:38:28.5190489Z] VERIFY_FAIL_REF local= remote=
[2025-08-22T19:59:04.3707734Z] VERIFY_ENV git=C:\Program Files\Git\cmd\git.exe
[2025-08-22T19:59:04.4482551Z] VERIFY_GIT_ERR tag=rev-parse-is-inside code=1 out=usage: git [-v | --version] [-h | --help] [-C <path>] [-c <name>=<value>]             [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]             [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--no-lazy-fetch]             [--no-optional-locks] [--no-advice] [--bare] [--git-dir=<path>]             [--work-tree=<path>] [--namespace=<name>] [--config-env=<name>=<envvar>]             <command> [<args>]    These are common Git commands used in various situations:    start a working area (see also: git help tutorial)     clone      Clone a repository into a new directory     init       Create an empty Git repository or reinitialize an existing one    work on the current change (see also: git help everyday)     add        Add file contents to the index     mv         Move or rename a file, a directory, or a symlink     restore    Restore working tree files     rm         Remove files from the working tree and from the index    examine the history and state (see also: git help revisions)     bisect     Use binary search to find the commit that introduced a bug     diff       Show changes between commits, commit and working tree, etc     grep       Print lines matching a pattern     log        Show commit logs     show       Show various types of objects     status     Show the working tree status    grow, mark and tweak your common history     backfill   Download missing objects in a partial clone     branch     List, create, or delete branches     commit     Record changes to the repository     merge      Join two or more development histories together     rebase     Reapply commits on top of another base tip     reset      Reset current HEAD to the specified state     switch     Switch branches     tag        Create, list, delete or verify a tag object signed with GPG    collaborate (see also: git help workflows)     fetch      Download objects and refs from another repository     pull       Fetch from and integrate with another repository or a local branch     push       Update remote refs along with associated objects    'git help -a' and 'git help -g' list available subcommands and some  concept guides. See 'git help <command>' or 'git help <concept>'  to read about a specific subcommand or concept.  See 'git help git' for an overview of the system.
[2025-08-22T19:59:04.4907196Z] VERIFY_GIT_ERR tag=rev-parse-git-dir code=1 out=usage: git [-v | --version] [-h | --help] [-C <path>] [-c <name>=<value>]             [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]             [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--no-lazy-fetch]             [--no-optional-locks] [--no-advice] [--bare] [--git-dir=<path>]             [--work-tree=<path>] [--namespace=<name>] [--config-env=<name>=<envvar>]             <command> [<args>]    These are common Git commands used in various situations:    start a working area (see also: git help tutorial)     clone      Clone a repository into a new directory     init       Create an empty Git repository or reinitialize an existing one    work on the current change (see also: git help everyday)     add        Add file contents to the index     mv         Move or rename a file, a directory, or a symlink     restore    Restore working tree files     rm         Remove files from the working tree and from the index    examine the history and state (see also: git help revisions)     bisect     Use binary search to find the commit that introduced a bug     diff       Show changes between commits, commit and working tree, etc     grep       Print lines matching a pattern     log        Show commit logs     show       Show various types of objects     status     Show the working tree status    grow, mark and tweak your common history     backfill   Download missing objects in a partial clone     branch     List, create, or delete branches     commit     Record changes to the repository     merge      Join two or more development histories together     rebase     Reapply commits on top of another base tip     reset      Reset current HEAD to the specified state     switch     Switch branches     tag        Create, list, delete or verify a tag object signed with GPG    collaborate (see also: git help workflows)     fetch      Download objects and refs from another repository     pull       Fetch from and integrate with another repository or a local branch     push       Update remote refs along with associated objects    'git help -a' and 'git help -g' list available subcommands and some  concept guides. See 'git help <command>' or 'git help <concept>'  to read about a specific subcommand or concept.  See 'git help git' for an overview of the system.
[2025-08-22T19:59:04.5526786Z] VERIFY_GIT_ERR tag=rev-parse-show-toplevel code=1 out=usage: git [-v | --version] [-h | --help] [-C <path>] [-c <name>=<value>]             [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]             [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--no-lazy-fetch]             [--no-optional-locks] [--no-advice] [--bare] [--git-dir=<path>]             [--work-tree=<path>] [--namespace=<name>] [--config-env=<name>=<envvar>]             <command> [<args>]    These are common Git commands used in various situations:    start a working area (see also: git help tutorial)     clone      Clone a repository into a new directory     init       Create an empty Git repository or reinitialize an existing one    work on the current change (see also: git help everyday)     add        Add file contents to the index     mv         Move or rename a file, a directory, or a symlink     restore    Restore working tree files     rm         Remove files from the working tree and from the index    examine the history and state (see also: git help revisions)     bisect     Use binary search to find the commit that introduced a bug     diff       Show changes between commits, commit and working tree, etc     grep       Print lines matching a pattern     log        Show commit logs     show       Show various types of objects     status     Show the working tree status    grow, mark and tweak your common history     backfill   Download missing objects in a partial clone     branch     List, create, or delete branches     commit     Record changes to the repository     merge      Join two or more development histories together     rebase     Reapply commits on top of another base tip     reset      Reset current HEAD to the specified state     switch     Switch branches     tag        Create, list, delete or verify a tag object signed with GPG    collaborate (see also: git help workflows)     fetch      Download objects and refs from another repository     pull       Fetch from and integrate with another repository or a local branch     push       Update remote refs along with associated objects    'git help -a' and 'git help -g' list available subcommands and some  concept guides. See 'git help <command>' or 'git help <concept>'  to read about a specific subcommand or concept.  See 'git help git' for an overview of the system.
[2025-08-22T19:59:04.5626146Z] VERIFY_PROBE dotgit=C:\Users\ander\My project\.git exists=True
[2025-08-22T19:59:04.5721788Z] VERIFY_ENV_WORKTREE_OK
[2025-08-22T19:59:04.6135661Z] VERIFY_GIT_ERR tag=rev-parse-HEAD code=1 out=usage: git [-v | --version] [-h | --help] [-C <path>] [-c <name>=<value>]             [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]             [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--no-lazy-fetch]             [--no-optional-locks] [--no-advice] [--bare] [--git-dir=<path>]             [--work-tree=<path>] [--namespace=<name>] [--config-env=<name>=<envvar>]             <command> [<args>]    These are common Git commands used in various situations:    start a working area (see also: git help tutorial)     clone      Clone a repository into a new directory     init       Create an empty Git repository or reinitialize an existing one    work on the current change (see also: git help everyday)     add        Add file contents to the index     mv         Move or rename a file, a directory, or a symlink     restore    Restore working tree files     rm         Remove files from the working tree and from the index    examine the history and state (see also: git help revisions)     bisect     Use binary search to find the commit that introduced a bug     diff       Show changes between commits, commit and working tree, etc     grep       Print lines matching a pattern     log        Show commit logs     show       Show various types of objects     status     Show the working tree status    grow, mark and tweak your common history     backfill   Download missing objects in a partial clone     branch     List, create, or delete branches     commit     Record changes to the repository     merge      Join two or more development histories together     rebase     Reapply commits on top of another base tip     reset      Reset current HEAD to the specified state     switch     Switch branches     tag        Create, list, delete or verify a tag object signed with GPG    collaborate (see also: git help workflows)     fetch      Download objects and refs from another repository     pull       Fetch from and integrate with another repository or a local branch     push       Update remote refs along with associated objects    'git help -a' and 'git help -g' list available subcommands and some  concept guides. See 'git help <command>' or 'git help <concept>'  to read about a specific subcommand or concept.  See 'git help git' for an overview of the system.
[2025-08-22T19:59:04.6552256Z] VERIFY_GIT_ERR tag=ls-remote code=1 out=usage: git [-v | --version] [-h | --help] [-C <path>] [-c <name>=<value>]             [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]             [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--no-lazy-fetch]             [--no-optional-locks] [--no-advice] [--bare] [--git-dir=<path>]             [--work-tree=<path>] [--namespace=<name>] [--config-env=<name>=<envvar>]             <command> [<args>]    These are common Git commands used in various situations:    start a working area (see also: git help tutorial)     clone      Clone a repository into a new directory     init       Create an empty Git repository or reinitialize an existing one    work on the current change (see also: git help everyday)     add        Add file contents to the index     mv         Move or rename a file, a directory, or a symlink     restore    Restore working tree files     rm         Remove files from the working tree and from the index    examine the history and state (see also: git help revisions)     bisect     Use binary search to find the commit that introduced a bug     diff       Show changes between commits, commit and working tree, etc     grep       Print lines matching a pattern     log        Show commit logs     show       Show various types of objects     status     Show the working tree status    grow, mark and tweak your common history     backfill   Download missing objects in a partial clone     branch     List, create, or delete branches     commit     Record changes to the repository     merge      Join two or more development histories together     rebase     Reapply commits on top of another base tip     reset      Reset current HEAD to the specified state     switch     Switch branches     tag        Create, list, delete or verify a tag object signed with GPG    collaborate (see also: git help workflows)     fetch      Download objects and refs from another repository     pull       Fetch from and integrate with another repository or a local branch     push       Update remote refs along with associated objects    'git help -a' and 'git help -g' list available subcommands and some  concept guides. See 'git help <command>' or 'git help <concept>'  to read about a specific subcommand or concept.  See 'git help git' for an overview of the system.
[2025-08-22T19:59:04.6684066Z] VERIFY_BEGIN local=usage: git [-v | --version] [-h | --help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--no-lazy-fetch]
           [--no-optional-locks] [--no-advice] [--bare] [--git-dir=<path>]
           [--work-tree=<path>] [--namespace=<name>] [--config-env=<name>=<envvar>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone      Clone a repository into a new directory
   init       Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add        Add file contents to the index
   mv         Move or rename a file, a directory, or a symlink
   restore    Restore working tree files
   rm         Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect     Use binary search to find the commit that introduced a bug
   diff       Show changes between commits, commit and working tree, etc
   grep       Print lines matching a pattern
   log        Show commit logs
   show       Show various types of objects
   status     Show the working tree status

grow, mark and tweak your common history
   backfill   Download missing objects in a partial clone
   branch     List, create, or delete branches
   commit     Record changes to the repository
   merge      Join two or more development histories together
   rebase     Reapply commits on top of another base tip
   reset      Reset current HEAD to the specified state
   switch     Switch branches
   tag        Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch      Download objects and refs from another repository
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system. remote=usage: branch=main repo=andorfiayahoo-del/htdesyeysdrdff
[2025-08-22T19:59:04.6775073Z] VERIFY_FAIL_REF local=usage: git [-v | --version] [-h | --help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--no-lazy-fetch]
           [--no-optional-locks] [--no-advice] [--bare] [--git-dir=<path>]
           [--work-tree=<path>] [--namespace=<name>] [--config-env=<name>=<envvar>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone      Clone a repository into a new directory
   init       Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add        Add file contents to the index
   mv         Move or rename a file, a directory, or a symlink
   restore    Restore working tree files
   rm         Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect     Use binary search to find the commit that introduced a bug
   diff       Show changes between commits, commit and working tree, etc
   grep       Print lines matching a pattern
   log        Show commit logs
   show       Show various types of objects
   status     Show the working tree status

grow, mark and tweak your common history
   backfill   Download missing objects in a partial clone
   branch     List, create, or delete branches
   commit     Record changes to the repository
   merge      Join two or more development histories together
   rebase     Reapply commits on top of another base tip
   reset      Reset current HEAD to the specified state
   switch     Switch branches
   tag        Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch      Download objects and refs from another repository
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system. remote=usage:
[2025-08-22T20:15:24.5205671Z] VERIFY_ENV git=C:\Program Files\Git\cmd\git.exe
[2025-08-22T20:15:24.5902455Z] VERIFY_GIT_OK tag=rev-parse-is-inside out=true
[2025-08-22T20:15:24.6053954Z] VERIFY_ENV_WORKTREE_OK
[2025-08-22T20:15:24.6529290Z] VERIFY_GIT_OK tag=rev-parse-HEAD out=1eee6a7e775d63a9d57e866567049b72bc567e53
[2025-08-22T20:15:25.1232035Z] VERIFY_GIT_OK tag=ls-remote out=1eee6a7e775d63a9d57e866567049b72bc567e53	refs/heads/main
[2025-08-22T20:15:25.1574180Z] VERIFY_BEGIN local=1eee6a7e775d63a9d57e866567049b72bc567e53 remote=1eee6a7e775d63a9d57e866567049b72bc567e53 branch=main repo=andorfiayahoo-del/htdesyeysdrdff
[2025-08-22T20:15:25.2108001Z] VERIFY_GIT_OK tag=diff-tree out=
[2025-08-22T20:15:25.2474969Z] VERIFY_CHANGED_COUNT=0
[2025-08-22T20:15:25.2601194Z] VERIFY_NO_CHANGED_FILES local=1eee6a7e775d63a9d57e866567049b72bc567e53
[2025-08-22T20:15:40.1549233Z] VERIFY_ENV git=C:\Program Files\Git\cmd\git.exe
[2025-08-22T20:15:40.2245115Z] VERIFY_GIT_OK tag=rev-parse-is-inside out=true
[2025-08-22T20:15:40.2441306Z] VERIFY_ENV_WORKTREE_OK
[2025-08-22T20:15:40.2917118Z] VERIFY_GIT_OK tag=rev-parse-HEAD out=8f82162aa35fc3e85acde3298dff28e8d7363e2a
[2025-08-22T20:15:40.7618001Z] VERIFY_GIT_OK tag=ls-remote out=8f82162aa35fc3e85acde3298dff28e8d7363e2a	refs/heads/main
[2025-08-22T20:15:40.7767694Z] VERIFY_BEGIN local=8f82162aa35fc3e85acde3298dff28e8d7363e2a remote=8f82162aa35fc3e85acde3298dff28e8d7363e2a branch=main repo=andorfiayahoo-del/htdesyeysdrdff
[2025-08-22T20:15:40.8306840Z] VERIFY_GIT_OK tag=diff-tree out=
[2025-08-22T20:15:40.8468188Z] VERIFY_CHANGED_COUNT=0
[2025-08-22T20:15:40.8599285Z] VERIFY_NO_CHANGED_FILES local=8f82162aa35fc3e85acde3298dff28e8d7363e2a
[2025-08-22T20:21:55.2284419Z] VERIFY_ENV git=C:\Program Files\Git\cmd\git.exe
[2025-08-22T20:21:55.2995482Z] VERIFY_GIT_OK tag=rev-parse-is-inside out=true
[2025-08-22T20:21:55.3151167Z] VERIFY_ENV_WORKTREE_OK
[2025-08-22T20:21:55.3677393Z] VERIFY_GIT_OK tag=rev-parse-HEAD out=338f25bf90befcb19d01bcaba578a2528cf5601c
[2025-08-22T20:21:55.8240949Z] VERIFY_GIT_OK tag=ls-remote out=338f25bf90befcb19d01bcaba578a2528cf5601c	refs/heads/main
[2025-08-22T20:21:55.8390384Z] VERIFY_BEGIN local=338f25bf90befcb19d01bcaba578a2528cf5601c remote=338f25bf90befcb19d01bcaba578a2528cf5601c branch=main repo=andorfiayahoo-del/htdesyeysdrdff
[2025-08-22T20:21:55.8910478Z] VERIFY_GIT_OK tag=diff-tree out=
[2025-08-22T20:21:55.9071256Z] VERIFY_CHANGED_COUNT=0
[2025-08-22T20:21:55.9219296Z] VERIFY_NO_CHANGED_FILES local=338f25bf90befcb19d01bcaba578a2528cf5601c
[2025-08-22T20:26:37.5431205Z] VERIFY_ENV git=C:\Program Files\Git\cmd\git.exe
[2025-08-22T20:26:37.6135808Z] VERIFY_GIT_OK tag=rev-parse-is-inside out=true
[2025-08-22T20:26:37.6304453Z] VERIFY_ENV_WORKTREE_OK
[2025-08-22T20:26:37.6767512Z] VERIFY_GIT_OK tag=rev-parse-HEAD out=a7d56cdd7185e8816d4ac911ad4b29f7d22c1224
[2025-08-22T20:26:38.1722631Z] VERIFY_GIT_OK tag=ls-remote out=a7d56cdd7185e8816d4ac911ad4b29f7d22c1224	refs/heads/main
[2025-08-22T20:26:38.1870949Z] VERIFY_BEGIN local=a7d56cdd7185e8816d4ac911ad4b29f7d22c1224 remote=a7d56cdd7185e8816d4ac911ad4b29f7d22c1224 branch=main repo=andorfiayahoo-del/htdesyeysdrdff
[2025-08-22T20:26:38.2378265Z] VERIFY_GIT_OK tag=diff-tree out=README.md
[2025-08-22T20:26:38.2544330Z] VERIFY_CHANGED_COUNT=1
[2025-08-22T20:26:38.2725343Z] VERIFY_CHANGED_SAMPLE=README.md
[2025-08-22T20:26:38.7078501Z] VERIFY_OK path=README.md sha=1f8701f95e9601c5413e4479c03d0281db2c2636d8af36b65edf6d57747da28f elapsed=0s
[2025-08-22T20:26:38.7196285Z] VERIFY_STRICT_OK commit=a7d56cdd7185e8816d4ac911ad4b29f7d22c1224
[2025-08-22T20:37:22.1750990Z] VERIFY_ENV git=C:\Program Files\Git\cmd\git.exe
[2025-08-22T20:37:22.2446470Z] VERIFY_GIT_OK tag=rev-parse-is-inside out=true
[2025-08-22T20:37:22.2605163Z] VERIFY_ENV_WORKTREE_OK
[2025-08-22T20:37:22.3068851Z] VERIFY_GIT_OK tag=rev-parse-HEAD out=596839e4b79c7b1c80e818b6ae8492855384d54b
[2025-08-22T20:37:22.7991543Z] VERIFY_GIT_OK tag=ls-remote out=596839e4b79c7b1c80e818b6ae8492855384d54b	refs/heads/main
[2025-08-22T20:37:22.8108691Z] VERIFY_BEGIN local=596839e4b79c7b1c80e818b6ae8492855384d54b remote=596839e4b79c7b1c80e818b6ae8492855384d54b branch=main repo=andorfiayahoo-del/htdesyeysdrdff
[2025-08-22T20:37:22.8577906Z] VERIFY_GIT_OK tag=diff-tree out=tools/ops/cdn-test.ps1
[2025-08-22T20:37:22.8707063Z] VERIFY_CHANGED_COUNT=1
[2025-08-22T20:37:22.8812743Z] VERIFY_CHANGED_SAMPLE=tools/ops/cdn-test.ps1
[2025-08-22T20:37:23.2065206Z] VERIFY_OK path=tools/ops/cdn-test.ps1 sha=cf427a233f7daa1375ada28da94884a3d5018d0d67c15dee8181173515f216c1 elapsed=0s
[2025-08-22T20:37:23.2147035Z] VERIFY_STRICT_OK commit=596839e4b79c7b1c80e818b6ae8492855384d54b
[2025-08-23T08:07:51.9040941Z] GIT_SYNC_COMMIT_OK
[2025-08-23T08:07:53.5482526Z] GIT_SYNC_PUSH_OK
[2025-08-23T08:07:53.5640133Z] GIT_VERIFY_PATH_EXISTS=True len=7146 path=C:\Users\ander\My project\tools\ops\verify-remote.ps1
[2025-08-23T08:07:53.5772860Z] GIT_VERIFY_PWSH=C:\Program Files\PowerShell\7\pwsh.exe
[2025-08-23T08:07:53.6018658Z] GIT_VERIFY_ARGV=-NoProfile -ExecutionPolicy Bypass -File "C:\Users\ander\My project\tools\ops\verify-remote.ps1" -RepoRoot "C:\Users\ander\My project" -LiveDir "C:\Users\ander\My project\ops\live" -Owner andorfiayahoo-del -Repo htdesyeysdrdff -Branch main -RemoteName origin -OldRemoteSha 596839e4b79c7b1c80e818b6ae8492855384d54b
[2025-08-23T08:07:53.6113788Z] GIT_VERIFY_RUN
[2025-08-23T08:07:54.6774235Z] GIT_VERIFY_EXIT=64
[2025-08-23T08:07:54.6868524Z] GIT_VERIFY_FAIL ec=64 (see VERIFY_* lines above)
[2025-08-23T09:39:29.9824668Z] GIT_SYNC_COMMIT_OK
[2025-08-23T09:39:31.4719368Z] GIT_SYNC_PUSH_OK
[2025-08-23T09:39:31.4850014Z] GIT_VERIFY_PATH_EXISTS=True len=7146 path=C:\Users\ander\My project\tools\ops\verify-remote.ps1
[2025-08-23T09:39:31.4968730Z] GIT_VERIFY_PWSH=C:\Program Files\PowerShell\7\pwsh.exe
[2025-08-23T09:39:31.5117823Z] GIT_VERIFY_ARGV=-NoProfile -ExecutionPolicy Bypass -File "C:\Users\ander\My project\tools\ops\verify-remote.ps1" -RepoRoot "C:\Users\ander\My project" -LiveDir "C:\Users\ander\My project\ops\live" -Owner andorfiayahoo-del -Repo htdesyeysdrdff -Branch main -RemoteName origin -OldRemoteSha 490a228ba4d818fefe219f10018177994d96dfe5
[2025-08-23T09:39:31.5203385Z] GIT_VERIFY_RUN
[2025-08-23T09:39:32.5770661Z] GIT_VERIFY_EXIT=64
[2025-08-23T09:39:32.5888061Z] GIT_VERIFY_FAIL ec=64 (see VERIFY_* lines above)
[2025-08-23T09:46:41.9516107Z] GIT_SYNC_COMMIT_OK
[2025-08-23T09:46:43.3717628Z] GIT_SYNC_PUSH_OK
[2025-08-23T09:46:43.3867319Z] GIT_VERIFY_PATH_EXISTS=True len=7146 path=C:\Users\ander\My project\tools\ops\verify-remote.ps1
[2025-08-23T09:46:43.3994310Z] GIT_VERIFY_PWSH=C:\Program Files\PowerShell\7\pwsh.exe
[2025-08-23T09:46:43.4130058Z] GIT_VERIFY_ARGV=-NoProfile -ExecutionPolicy Bypass -File "C:\Users\ander\My project\tools\ops\verify-remote.ps1" -RepoRoot "C:\Users\ander\My project" -LiveDir "C:\Users\ander\My project\ops\live" -Owner andorfiayahoo-del -Repo htdesyeysdrdff -Branch main -RemoteName origin -OldRemoteSha 7f0708103f7b97a7d5f0ec6fe8385c1a2f925be5
[2025-08-23T09:46:43.4219899Z] GIT_VERIFY_RUN
[2025-08-23T09:46:44.4780120Z] GIT_VERIFY_EXIT=64
[2025-08-23T09:46:44.4880137Z] GIT_VERIFY_FAIL ec=64 (see VERIFY_* lines above)
[2025-08-23T09:46:56.9054558Z] GIT_SYNC_COMMIT_OK
[2025-08-23T09:46:58.3866452Z] GIT_SYNC_PUSH_OK
[2025-08-23T09:46:58.4024360Z] GIT_VERIFY_PATH_EXISTS=True len=7146 path=C:\Users\ander\My project\tools\ops\verify-remote.ps1
[2025-08-23T09:46:58.4158846Z] GIT_VERIFY_PWSH=C:\Program Files\PowerShell\7\pwsh.exe
[2025-08-23T09:46:58.4300351Z] GIT_VERIFY_ARGV=-NoProfile -ExecutionPolicy Bypass -File "C:\Users\ander\My project\tools\ops\verify-remote.ps1" -RepoRoot "C:\Users\ander\My project" -LiveDir "C:\Users\ander\My project\ops\live" -Owner andorfiayahoo-del -Repo htdesyeysdrdff -Branch main -RemoteName origin -OldRemoteSha 1e2672b1569f48497959678551530fa85700b8a3
[2025-08-23T09:46:58.4387895Z] GIT_VERIFY_RUN
[2025-08-23T09:46:59.5025690Z] GIT_VERIFY_EXIT=64
[2025-08-23T09:46:59.5115347Z] GIT_VERIFY_FAIL ec=64 (see VERIFY_* lines above)
[2025-08-23T09:54:02.2454974Z] GIT_SYNC_COMMIT_OK
[2025-08-23T09:54:03.7659970Z] GIT_SYNC_PUSH_OK
[2025-08-23T09:54:03.7802933Z] GIT_VERIFY_PATH_EXISTS=True len=7146 path=C:\Users\ander\My project\tools\ops\verify-remote.ps1
[2025-08-23T09:54:03.7927522Z] GIT_VERIFY_PWSH=C:\Program Files\PowerShell\7\pwsh.exe
[2025-08-23T09:54:03.8075091Z] GIT_VERIFY_ARGV=-NoProfile -ExecutionPolicy Bypass -File "C:\Users\ander\My project\tools\ops\verify-remote.ps1" -RepoRoot "C:\Users\ander\My project" -LiveDir "C:\Users\ander\My project\ops\live" -Owner andorfiayahoo-del -Repo htdesyeysdrdff -Branch main -RemoteName origin -OldRemoteSha a81a3520afdf87ba511e467f4d733035d721f480
[2025-08-23T09:54:03.8161059Z] GIT_VERIFY_RUN
[2025-08-23T09:54:04.8796202Z] GIT_VERIFY_EXIT=64
[2025-08-23T09:54:04.8995180Z] GIT_VERIFY_FAIL ec=64 (see VERIFY_* lines above)
[2025-08-23T09:58:51.6319849Z] GIT_SYNC_COMMIT_OK
[2025-08-23T09:58:53.0526907Z] GIT_SYNC_PUSH_OK
[2025-08-23T09:58:53.0669577Z] GIT_VERIFY_PATH_EXISTS=True len=7146 path=C:\Users\ander\My project\tools\ops\verify-remote.ps1
[2025-08-23T09:58:53.0798011Z] GIT_VERIFY_PWSH=C:\Program Files\PowerShell\7\pwsh.exe
[2025-08-23T09:58:53.0937413Z] GIT_VERIFY_ARGV=-NoProfile -ExecutionPolicy Bypass -File "C:\Users\ander\My project\tools\ops\verify-remote.ps1" -RepoRoot "C:\Users\ander\My project" -LiveDir "C:\Users\ander\My project\ops\live" -Owner andorfiayahoo-del -Repo htdesyeysdrdff -Branch main -RemoteName origin -OldRemoteSha 2485540be8c38a26181ff70d142171f804db14b9
[2025-08-23T09:58:53.1022608Z] GIT_VERIFY_RUN
[2025-08-23T09:58:54.1706149Z] GIT_VERIFY_EXIT=64
[2025-08-23T09:58:54.1840993Z] GIT_VERIFY_FAIL ec=64 (see VERIFY_* lines above)
[2025-08-23T10:03:25.9058384Z] VERIFY_ENV git=C:\Program Files\Git\cmd\git.exe
[2025-08-23T10:03:25.9849959Z] VERIFY_GIT_OK tag=rev-parse-is-inside out=true
[2025-08-23T10:03:25.9967077Z] VERIFY_ENV_WORKTREE_OK
[2025-08-23T10:03:26.0409297Z] VERIFY_GIT_OK tag=rev-parse-HEAD out=94557c7d685a9e72e6cf4d08abff20eb91a5b392
[2025-08-23T10:03:26.5049947Z] VERIFY_GIT_OK tag=ls-remote out=94557c7d685a9e72e6cf4d08abff20eb91a5b392	refs/heads/main
[2025-08-23T10:03:26.5168933Z] VERIFY_BEGIN local=94557c7d685a9e72e6cf4d08abff20eb91a5b392 remote=94557c7d685a9e72e6cf4d08abff20eb91a5b392 branch=main repo=andorfiayahoo-del/htdesyeysdrdff
[2025-08-23T10:03:26.5682998Z] VERIFY_GIT_OK tag=diff-tree out=ops/live/push-flush.log  tools/ops/here-string-demo.txt
[2025-08-23T10:03:26.5937899Z] VERIFY_CHANGED_COUNT=1
[2025-08-23T10:03:26.6070230Z] VERIFY_CHANGED_SAMPLE=tools/ops/here-string-demo.txt
[2025-08-23T10:03:26.6785345Z] VERIFY_SKIP path=tools/ops/here-string-demo.txt reason=blob-missing
[2025-08-23T10:03:26.6972585Z] VERIFY_STRICT_FAIL commit=94557c7d685a9e72e6cf4d08abff20eb91a5b392
[2025-08-23T10:14:22.4365508Z] GIT_SYNC_COMMIT_OK
[2025-08-23T10:14:23.8719680Z] GIT_SYNC_PUSH_OK
[2025-08-23T10:14:23.8863027Z] GIT_VERIFY_PATH_EXISTS=True len=7146 path=C:\Users\ander\My project\tools\ops\verify-remote.ps1
[2025-08-23T10:14:23.8983976Z] GIT_VERIFY_PWSH=C:\Program Files\PowerShell\7\pwsh.exe
[2025-08-23T10:14:23.9121443Z] GIT_VERIFY_ARGV=-NoProfile -ExecutionPolicy Bypass -File "C:\Users\ander\My project\tools\ops\verify-remote.ps1" -RepoRoot "C:\Users\ander\My project" -LiveDir "C:\Users\ander\My project\ops\live" -Owner andorfiayahoo-del -Repo htdesyeysdrdff -Branch main -RemoteName origin -OldRemoteSha 94557c7d685a9e72e6cf4d08abff20eb91a5b392
[2025-08-23T10:14:23.9205685Z] GIT_VERIFY_RUN
[2025-08-23T10:14:24.9798915Z] GIT_VERIFY_EXIT=64
[2025-08-23T10:14:24.9897099Z] GIT_VERIFY_FAIL ec=64 (see VERIFY_* lines above)
[2025-08-23T10:34:26.1059490Z] VERIFY_ENV git=C:\Program Files\Git\cmd\git.exe
[2025-08-23T10:34:26.1862647Z] VERIFY_GIT_OK tag=rev-parse-is-inside out=true
[2025-08-23T10:34:26.1984197Z] VERIFY_ENV_WORKTREE_OK
[2025-08-23T10:34:26.2421188Z] VERIFY_GIT_OK tag=rev-parse-HEAD out=01d5eae639fefe085da29141d7f3a9fc4e4456dd
[2025-08-23T10:34:26.7220764Z] VERIFY_GIT_OK tag=ls-remote out=01d5eae639fefe085da29141d7f3a9fc4e4456dd	refs/heads/main
[2025-08-23T10:34:26.7338393Z] VERIFY_BEGIN local=01d5eae639fefe085da29141d7f3a9fc4e4456dd remote=01d5eae639fefe085da29141d7f3a9fc4e4456dd branch=main repo=andorfiayahoo-del/htdesyeysdrdff
[2025-08-23T10:34:26.7872053Z] VERIFY_GIT_OK tag=diff-tree-name-status out=M	ops/live/push-flush.log  M	tools/ops/here-string-demo.txt  A	tools/ops/vpushcheck.ps1
[2025-08-23T10:34:26.8034082Z] VERIFY_CHANGED_COUNT=2
[2025-08-23T10:34:26.8136861Z] VERIFY_CHANGED_SAMPLE=tools/ops/here-string-demo.txt, tools/ops/vpushcheck.ps1
[2025-08-23T10:34:27.1666196Z] VERIFY_OK path=tools/ops/here-string-demo.txt sha=3a8bb70ac0b83f09fbf2e8f99b077faf4a00e234128133bb34e8f924c869760a elapsed=0s
[2025-08-23T10:34:27.3640493Z] VERIFY_OK path=tools/ops/vpushcheck.ps1 sha=bc537d9e9aa6f326d524ec73e2f3182eabcab7552729fe721a73fec56915e54f elapsed=0s
[2025-08-23T10:34:27.3730265Z] VERIFY_STRICT_OK commit=01d5eae639fefe085da29141d7f3a9fc4e4456dd
[2025-08-23T10:41:26.5085015Z] GIT_SYNC_COMMIT_OK
[2025-08-23T10:41:27.9673095Z] GIT_SYNC_PUSH_OK
[2025-08-23T10:41:27.9804179Z] GIT_VERIFY_PATH_EXISTS=True len=7845 path=C:\Users\ander\My project\tools\ops\verify-remote.ps1
[2025-08-23T10:41:27.9922765Z] GIT_VERIFY_PWSH=C:\Program Files\PowerShell\7\pwsh.exe
[2025-08-23T10:41:28.0065469Z] GIT_VERIFY_ARGV=-NoProfile -ExecutionPolicy Bypass -File "C:\Users\ander\My project\tools\ops\verify-remote.ps1" -RepoRoot "C:\Users\ander\My project" -LiveDir "C:\Users\ander\My project\ops\live" -Owner andorfiayahoo-del -Repo htdesyeysdrdff -Branch main -RemoteName origin -OldRemoteSha 01d5eae639fefe085da29141d7f3a9fc4e4456dd
[2025-08-23T10:41:28.0153046Z] GIT_VERIFY_RUN
[2025-08-23T10:41:29.0777160Z] GIT_VERIFY_EXIT=64
[2025-08-23T10:41:29.0905923Z] GIT_VERIFY_FAIL ec=64 (see VERIFY_* lines above)
[2025-08-23T10:41:31.5227223Z] GIT_SYNC_COMMIT_OK
[2025-08-23T10:41:32.9735850Z] GIT_SYNC_PUSH_OK
[2025-08-23T10:41:32.9887387Z] GIT_VERIFY_PATH_EXISTS=True len=7845 path=C:\Users\ander\My project\tools\ops\verify-remote.ps1
[2025-08-23T10:41:33.0011289Z] GIT_VERIFY_PWSH=C:\Program Files\PowerShell\7\pwsh.exe
[2025-08-23T10:41:33.0147555Z] GIT_VERIFY_ARGV=-NoProfile -ExecutionPolicy Bypass -File "C:\Users\ander\My project\tools\ops\verify-remote.ps1" -RepoRoot "C:\Users\ander\My project" -LiveDir "C:\Users\ander\My project\ops\live" -Owner andorfiayahoo-del -Repo htdesyeysdrdff -Branch main -RemoteName origin -OldRemoteSha 4f7541866488dc8985b42d8b834fcba34ccab0c4
[2025-08-23T10:41:33.0238215Z] GIT_VERIFY_RUN
[2025-08-23T10:41:34.0781752Z] GIT_VERIFY_EXIT=64
[2025-08-23T10:41:34.0968733Z] GIT_VERIFY_FAIL ec=64 (see VERIFY_* lines above)
[2025-08-23T10:41:34.8055822Z] VERIFY_ENV git=C:\Program Files\Git\cmd\git.exe
[2025-08-23T10:41:34.8812837Z] VERIFY_GIT_OK tag=rev-parse-is-inside out=true
[2025-08-23T10:41:34.8932655Z] VERIFY_ENV_WORKTREE_OK
[2025-08-23T10:41:34.9373365Z] VERIFY_GIT_OK tag=rev-parse-HEAD out=f61710ac39da09e85c4a215a67b6c53be999ab4f
[2025-08-23T10:41:35.4079908Z] VERIFY_GIT_OK tag=ls-remote out=ef417b45ea14a660ab999d719b57e1885737fcd1	refs/heads/main
[2025-08-23T10:41:35.4229990Z] VERIFY_BEGIN local=f61710ac39da09e85c4a215a67b6c53be999ab4f remote=ef417b45ea14a660ab999d719b57e1885737fcd1 branch=main repo=andorfiayahoo-del/htdesyeysdrdff
[2025-08-23T10:41:35.4331469Z] VERIFY_FAIL_REF local=f61710ac39da09e85c4a215a67b6c53be999ab4f remote=ef417b45ea14a660ab999d719b57e1885737fcd1
